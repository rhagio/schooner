#!/bin/bash

intro-dialog()
{
	kdialog \
		--caption "Website Password Creator" \
		--icon "gcr-key" \
		--yesno "some instructions" \
		--yes-label "&Create a Password" \
		--no-label "&Cancel"	
		
	Result=$?
	return $Result	
}

warn-clear-clipboard-dialog()
{
	kdialog \
	--caption "Website Password Creator" \
	--icon "gcr-key" \
	--msgbox "To maintain your privacy, you may want \nto clear any passwords left on the Clipboard.\n\nClick the Clipboard (scissors) System Tray icon then \nselect Clear Clipboard History."
}

choose-pswd-dialog()
{
	declare Password=
	declare PasswordType=
	declare PasswordDesc=
	declare CautionMsg=
		
	# ideally the cancel button would be labelled "Exit" but --cancel-label is ignored by kdialog --menu
	PasswordType=$(kdialog \
		--caption "Website Password Creator" \
		--icon "gcr-key" \
		--menu "Select the strongest type of password that the website will accept." \
			a "Strongest:   24 characters (uppercase, lowercase, numbers, punctuation)" \
			b "Very Strong: 24 characters (uppercase, lowercase, numbers)" \
			d "Strong:      10 characters (uppercase, lowercase, numbers, punctuation)" \
			e "OK:          10 Characters (uppercase, lowercase, numbers)" \
			g "Weak:        8 characters (uppercase, lowercase, numbers, punctuation)" \
			h "Very Weak:   8 Characters (uppercase, lowercase, numbers)")
			
	if [[ $? = 1 ]]; then
		warn-clear-clipboard
		exit
	fi
		
	Pass=0
	while [[ $Pass = 0 ]]; do
		case $PasswordType in
			a)	Password=$(apg -c cl_seed -a 1 -m 24 -x 24 -n 1 -M NCLS -E 1lO0\[\]\~-\"\'\`\|\\/.\;\:)
				PasswordDesc="You created a 24-character password with a mix of upper and lower-case letters, numbers and special characters.";;
				
			b)	Password=$(apg -c cl_seed -a 1 -m 24 -x 24 -n 1 -M NCL  -E 1lO0\[\]\~-\"\'\`\|\\/.\;\:)
				PasswordDesc="You created a 24-character password with a mix of upper and lower-case letters and numbers.";;
				
			#c)	Password=$(apg -c cl_seed -a 1 -m 24 -x 24 -n 1 -M CL   -E 1lO0\[\]\~-\"\'\`\|\\/.\;\:)
			#	PasswordDesc="You created a 24-character password with a mix of upper and lower-case letters.";;
				
			d)	Password=$(apg -c cl_seed -a 1 -m 10 -x 10 -n 1 -M NCLS -E 1lO0\[\]\~-\"\'\`\|\\/.\;\:)
				PasswordDesc="You created a 10-character password with a mix of upper and lower-case letters, numbers and special characters.";;
				
			e)	Password=$(apg -c cl_seed -a 1 -m 10 -x 10 -n 1 -M NCL  -E 1lO0\[\]\~-\"\'\`\|\\/.\;\:)
				PasswordDesc="You created a 10-character password with a mix of upper and lower-case letters and numbers.";;
				
			#f)	Password=$(apg -c cl_seed -a 1 -m 10 -x 10 -n 1 -M CL   -E 1lO0\[\]\~-\"\'\`\|\\/.\;\:)
			#	PasswordDesc="You created a 10-character password with a mix of upper and lower-case letters.";;
				
			g)	Password=$(apg -c cl_seed -a 1 -m  8 -x  8 -n 1 -M NCLS -E 1lO0\[\]\~-\"\'\`\|\\/.\;\:)
				PasswordDesc="You created an 8-character password with a mix of upper and lower-case letters, numbers and special characters."
				CautionMsg="CAUTION: 8-character passwords are inherently easy to crack. Only use this password if the website won't accept a longer one.";;
				
			h)	Password=$(apg -c cl_seed -a 1 -m  8 -x  8 -n 1 -M NCL  -E 1lO0\[\]\~-\"\'\`\|\\/.\;\:)	
				PasswordDesc="You created an 8-character password with a mix of upper and \nlower-case letters and numbers.";
				CautionMsg="CAUTION: 8-character passwords are inherently easy to crack. Only use this password if the website won't accept a longer one.";;
		esac
		
		# there's a good chance of generating short passwords vulnerable to dictionary attack so
		# repeat until get a good one. cranky way of checking cracklib output is best available!
		if [[ $(echo $Password | cracklib-check | tail -c5) = ": OK" ]]; then
			Pass=1
		fi
	done

	kdialog \
		--caption "Website Password Creator" \
		--icon "gcr-key" \
		--yesno "$PasswordDesc\n\nThe password is     $Password\n\n$CautionMsg" \
		--yes-label "&Copy Password to Clipboard" \
		--no-label "&Finish"	
		
	Result=$?

	if [[ $Result = 0 ]]; then
		echo $Password | xclip -selection clipboard
	fi

	return $Result	
}

sult=0

while [[ $sult = 0 ]]; do
	intro-dialog
	sult=$?
done
	
warn-clear-clipboard-dialog

