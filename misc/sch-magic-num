#!/bin/dash
#=======================================================================
# File:      sch-magic-num
# Created:   17/10/2014
# Purpose:   Utilities for handling magic numbers in code
# Author:    Bill Cane
# Email:     schoonerdemo@gmail.com
# Copyright: Â© Bill Cane
#
# Licence: This program is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or(at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#=======================================================================

usage()
# Purpose: describe usage of this script
# Args:    none
# Returns: 0 success
{
cat << EOF
NAME
       sch-magic-num - Utilities for handling magic numbers in code

SYNOPSIS
       sch-magic-num [OPTION]... [FILE]...

DESCRIPTION
	-s filespec [directory]

	-m magic-num [NNNNN]

	-g generate
			Places 5-digit random magic number on clipboard.

	-f find
			find file containing a magic number and what line it is on.
			Filespec is mandatory.

		valid combinations are:-
		-g
		-f -s <filespec> -n <magic-num>

EXIT STATUS
       0      -g: always. -f: when file found.
       1      -g: never.  -f: when no file found.
       stdout -g: null.   -f: <magic-num><space><filespec>

USAGE

EOF
}

generate()
# Purpose:     Generate a five digit random number and place on clipboard
# Args:        None
# Exit status: Always 0
{
	local Random="$(tr -c -d 0-9 < /dev/urandom | head -c 5)"
	qdbus org.kde.klipper /klipper setClipboardContents \'$Random\'
	exit 0
}

grep_for_num()
# Purpose:     search for instance of specified magic-num in specified
#              directory. If found, place filespec and linenumber on stdout.
# Args:        $1:magic-num
# Exit status: 0:found instance
#              1:nothing found
# StdOut:      <line-no><space><filespec>
{
	local MagicNum; local FileSpec; local LineNum
	MagicNum="$1"
	FileSpec="$(grep --line-number $MagicNum /home/attic/sch-dev/scripts/sch* |head -n1 |cut -d: -f1)"
	LineNum="$(grep --line-number $MagicNum /home/attic/sch-dev/scripts/sch* |head -n1 |cut -d: -f2)"
	echo "$LineNum $FileSpec"
}

MagicNum=''; DirSpec=''; Problem=''

# process options and args

while getopts "s:m:gf" Option
do
	case "$Option" in
		s)
			DirSpec="$OPTARG"
			[ "$DirSpec" != '' ] || abend '86305' "missing arg for -f"
			Problem=$(sch-file-exists -s "$DirSpec" -dr)
			[ "$?" = 0 ] || abend '64521' "folder ($DirSpec) is $Problem" ;;

		m )
			MagicNum="$OPTARG"
			[ "$MagicNum" != '' ] || { usage; abend '86305' "missing arg for -f"; } ;;

		g )
			generate ;;

		f )
			grep_for_num "$MagicNum" ;;

		* ) usage; exit 1 ;;
	esac
done


